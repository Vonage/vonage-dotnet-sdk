name: .NET Core

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Setup .NET 6.0
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.403'
      - name: Setup .NET 3.1
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.401'

      - name: Install SonarScanner
        run: |
          dotnet tool update --global dotnet-sonarscanner
      - name: Install coverlet
        id: install-coverlet
        run: |
          dotnet tool install --global dotnet-coverage

      - uses: actions/checkout@v2
      - name: Clean
        run: dotnet clean Vonage.sln --configuration Release && dotnet nuget locals all --clear
      - name: Restore NuGets
        run: dotnet restore
        
      - name: Begin SonarScanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet-sonarscanner begin /k:"Vonage_vonage-dotnet-sdk" /o:"vonage" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet-coverage collect 'dotnet test  --configuration Release --no-build' -f xml  -o 'coverage.xml'
      - name: End SonarScanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"